name: LavaWebApp CICD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  DOCKER_REGISTRY_URL: lavaacr.azurecr.io
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: ACR Login
        uses: Azure/docker-login@v1
        with:
          login-server:  ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.LAVA_ACR_USERNAME }}
          password: ${{ secrets.LAVA_ACR_PASSWORD }}
        
      - name: Build and Push Docker Image
        run: | 
          docker build . -t ${{ env.DOCKER_REGISTRY_URL }}/lavawebapp:${{ github.run_id }}
          docker push ${{ env.DOCKER_REGISTRY_URL }}/lavawebapp:${{ github.run_id }}
          
      - name: Package ARM Template
        uses: actions/upload-artifact@v2
        with: 
          name: arm-templates
          path: ${{ github.workspace }}/Lava.WebAPI/azuredeploy.json
          retention-days: 5
        
  dev: 
    runs-on: ubuntu-latest
    
    needs: build
    environment: development
    
    env:
      ENVIRONMENT_PREFIX: dev
      
      SERVER_FARM_RESOURCE_GROUP_NAME: DEV-ACRCD-RG
      WEBAPP_LOCATION: uksouth
      WEBAPP_SKU: Free
      WEBAPP_SKU_CODE: F1
      
      TAG_ENVIRONMENT: DEVELOPMENT
      
    steps:
    
      - name: Dowload ARM Templates
        uses: actions/download-artifact@v3
        with:
          name: arm-templates
          
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SP_CREDENTIALS }}
          
      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.SERVER_FARM_RESOURCE_GROUP_NAME }}
          deploymentMode: Incremental
          template: azuredeploy.json
          parameters: > 
            subscriptionId="${{ secrets.SUBSCRIPTION_ID }}"
            name="${{ env.ENVIRONMENT_PREFIX }}-devops-lavawebapp"
            location=${{ env.WEBAPP_LOCATION }}"
            hostingPlanName="${{ env.ENVIRONMENT_PREFIX }}-asp"
            serverFarmResourceGroup="${{ env.SERVER_FARM_RESOURCE_GROUP_NAME }}"
            sku="${{ env.WEBAPP_SKU }}"
            skuCode="${{ env.WEBAPP_SKU_CODE }}"
            linuxFxVersion="DOCKER|${{ env.DOCKER_REGISTRY_URL }}/lavawebapp:${{ github.run_id }}"
            dockerRegistryUrl="${{ env.DOCKER_REGISTRY_URL }}"
            dockerRegistryUsername="${{ secrets.LAVA_ACR_USERNAME }}"
            dockerRegistryPassword="${{ secrets.LAVA_ACR_PASSWORD }}"
            tag_environment="${{ env.TAG_ENVIRONMENT }}"
  
  prd:
    runs-on: ubuntu-latest

    needs: dev
    environment: production

    env:
      ENVIRONMENT_PREFIX: prd

      SERVER_FARM_RESOURCE_GROUP_NAME: PRD-ACRCD-RG
      WEBAPP_LOCATION: uksouth
      WEBAPP_SKU: Free
      WEBAPP_SKU_CODE: F1

      TAG_ENVIRONMENT: PRODUCTION

    steps:

      - name: Download ARM Templates
        uses: actions/download-artifact@v3
        with:
          name: arm-templates

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SP_CREDENTIALS }}

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.SERVER_FARM_RESOURCE_GROUP_NAME }}
          deploymentMode: Incremental
          template: azuredeploy.json
          parameters: > 
            subscriptionId="${{ secrets.SUBSCRIPTION_ID }}"
            name="${{ env.ENVIRONMENT_PREFIX }}-devops-samplewebapp"
            location="${{ env.WEBAPP_LOCATION }}"
            hostingPlanName="${{ env.ENVIRONMENT_PREFIX }}-asp"
            serverFarmResourceGroup="${{ env.SERVER_FARM_RESOURCE_GROUP_NAME }}"
            sku="${{ env.WEBAPP_SKU }}"
            skuCode="${{ env.WEBAPP_SKU_CODE }}"
            linuxFxVersion="DOCKER|${{ env.DOCKER_REGISTRY_URL }}/samplewebapp:${{ github.run_id }}"
            dockerRegistryUrl="${{ env.DOCKER_REGISTRY_URL }}"
            dockerRegistryUsername="${{ secrets.ACR_USERNAME }}"
            dockerRegistryPassword="${{ secrets.ACR_PASSWORD }}"
            tag_environment="${{ env.TAG_ENVIRONMENT }}" 
